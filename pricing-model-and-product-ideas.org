* Conversation
** Anak — Today at 3:56 PM
you have time for quick question? its about payment plans. I want to have some numbers

** mullikine — Today at 3:56 PM
Oh yup
I was thinking like 6c /hour , similar to datomic
it might be a good idea to look at the datomic pricing model

** Anak — Today at 3:57 PM
how would you charge clients? (those startup or those who use LM)

** mullikine — Today at 3:58 PM
Hang on I have an excel spreadsheet which I have to submit to AWS
to explain the pricing

** Anak — Today at 3:58 PM
that's good. can you tell me example of companies that would be involved in LM-training ecosystem?
'''
Semiotic (my startup) is positioning itself
right in the middle of that and has the first
language server that utilises these LMs to
provide human-intelligence augmenting functions
to VSCode, web browsers and other computing
interfaces.
'''
"middle of ..." list out companies or business that would fill the blank.

** mullikine — Today at 4:00 PM
- The pricing model is literally just hourly leasing of the container, at the moment
** Anak — Today at 4:00 PM
- You want to do it right now? talk on discord and go through things to write in business plan. 15 mins are more than enough.

** mullikine — Today at 4:01 PM
- All software companies. It competes with GitHub Copilot. They are positioning themselves to fine-tune language models for the upskilling of employees
** Anak — Today at 4:01 PM
- i look up copilot whitepaper. they don't have it up yet.

** mullikine — Today at 4:01 PM
- with an LSP server. Pen.el does this transparently, and without requiring the Codex model
** Anak — Today at 4:01 PM
- "... for the upskilling of employees" what you mean by this?

** mullikine — Today at 4:02 PM
- By increasing the abstraction of the underlying utilities and raising the bar for employee expectations on writing more code and being more productive
- In a previous startup I was part of, CodeLingo, this was also the vision. The way they did this was to automate bug-fixing and maintaining code standards by creating bundles of 'tenets', which were descriptions of design patterns and antipatterns, and the automation of pull requests based on those standards.
- But an LSP server would lower the barrier of onboarding into foreign codebases, for example, by providing documentation inside the editor.
- But it's not just about software development. This would help onboard readers or writers. The LSP server is an integrated accessibility tool for the web, for instant messaging, for communications, for software development, etc.
- So it's likely to become a personal assistant/agent for all computing, as the LSP protocol is employed for more types of computing interfaces.

** Anak — Today at 4:07 PM
- why would the worker need lsp for that? I thought lsp server is to provides IDE like experience.
- employees have to have write prompt.el with pen.el right?
** mullikine — Today at 4:08 PM
- They do not have write prompts, but they can.
- But as they use the LSP server, it prompt-tunes prompts.
- The docker container for lease provides both an LSP server and a prompting server.
- The prompting server may be used to trivially integrate GPT-3 into other applications.
- To lower the time in which it takes to develop chatbot services, for example, or to lower the speed at which web services can be created by providing imaginary functions to mock APIs etc.
- Or to search the web
- A prompting server lets you utilise language models in your applications without onboarding people into learning how to do prompt engineering
- And it makes the learning process for figuring out how to utilise GPT-3 much easier
- So trivial in fact that you don't even need to write prompts. You can just write imaginary functions instead
- which may be defined by function name alone, and integrate that into your language via a simple command line interface
- which makes it trivial to integrate into any language
- Whilst Pen.el takes care of things like, handling what language models you are using, caching of prompts, coherence of subsequent prompts, etc.
- It's a prompting server with many options for configuration
- And its capabilities can be provided to VSCode or any editor supporting LSP (which is all of them) so all employees can be utilising the capabilities of GPT-3/Codex/etc. or a company's private model, or a private fine-tuned Codex model, taking advantage of the power of Codex, etc. to lower the barrier to writing code.
- The prompting server can also be used as a factor to be incorporated into search engines.
- The LSP server future proofs the project so that it will become an augmented reality visor for surfing the internet
- Replacing tools like grammarly, alethea.ai (talking to SME chatbots), Copilot, duckduckgo, AI21's wordtune, etc.
- With an integrated, private and configurable alternative, that doesn't charge you for rates on usage.